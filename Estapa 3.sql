
-- BORRADO DE TABLA
DROP TABLE RESUMEN_PROCESO_POSTULANTE;

/

--CREAR TABLA REQUERIMIENTO 3.1
CREATE TABLE RESUMEN_PROCESO_POSTULANTE  (
    RUN_POSTULANTE                      VARCHAR2(15) NOT NULL,
    NOMBRE_POSTULANTE                   VARCHAR2(50) NOT NULL,
    EDAD	                            NUMBER(2) NOT NULL,
    PTJE_EDAD	                        NUMBER(4) NOT NULL,
    EST_CIVIL	                        VARCHAR2 (30) NOT NULL,
    PTJE_EST_CIVIL	                    NUMBER(4) NOT NULL,
    PUEBLO_IND_ORIG                     VARCHAR2 (50) NOT NULL,
    PTJE_PUEBLO_IND_ORIG                NUMBER(4) NOT NULL,
    ZONA_EXTREMA	                    VARCHAR2 (50) NOT NULL,
    PTJE_ZONA_EXTRENA	                NUMBER(4) NOT NULL,
    ANTEC_ACAD	                        NUMBER (4) NOT NULL,
    PJE_ANTEC_ACAD	                    NUMBER(4) NOT NULL,
    TRAYEC_EXP_LABORAL	                VARCHAR2 (50) NOT NULL,
    PTJE_TRAYEC_EXP_LABORAL	            NUMBER(4) NOT NULL,
    DOCENCIA_INVEST                     VARCHAR2 (50) NOT NULL,
    PTJE_DOCENCIA_INVEST 	            NUMBER(4) NOT NULL,
    OBJETIVO_ESTUDIO	                VARCHAR2 (50) NOT NULL,
    PTJE_OBJETIVO_ESTUDIO               NUMBER(4) NOT NULL,
    INTERES                             VARCHAR2 (50) NOT NULL,
    PTJE_INTERES                        NUMBER(4) NOT NULL,
    RETRIBUCION	                        VARCHAR2 (50) NOT NULL,
    PTJE_RETRIB                         NUMBER(4) NOT NULL,
    INST_EDUC_EXTRANJERA	            VARCHAR2 (50) NOT NULL,
    PTJE_RANKING_INST_EDUC_EXTRANJERA   NUMBER(4) NOT NULL,
    PTJE_TOTAL                          NUMBER(5,3) NOT NULL
);

/

-- ESPECIFICACIÓN DEL PACKAGE
CREATE OR REPLACE PACKAGE PGK_POSTULANTION_BECA
IS
    VP_SQLERRM VARCHAR2 (250);
    VP_MSJE_ERROR VARCHAR2 (250);

    FUNCTION FN_INST_EDUC_EXTRANJERA (P_ID_POSTULANTE NUMBER) RETURN VARCHAR2;
    FUNCTION FN_EST_CIVIL (P_ID_POSTULANTE NUMBER) RETURN VARCHAR2;
    FUNCTION FN_ZONA_EXTREMA (P_ID_POSTULANTE IN NUMBER) RETURN VARCHAR2;
    FUNCTION FN_PUEBLO_IND_ORIG (P_ID_POSTULANTE NUMBER) RETURN VARCHAR2;

END PGK_POSTULANTION_BECA;


/

-- BODY DEL PACKAGE
CREATE OR REPLACE PACKAGE BODY PGK_POSTULANTION_BECA
IS
    -- FUNCION PARA OBTENER INSTITUCIÓN EXTRANJERA
    FUNCTION FN_INST_EDUC_EXTRANJERA (P_ID_POSTULANTE NUMBER)
    RETURN VARCHAR2
    AS
        V_INST_EDUC_EXTRAN VARCHAR2 (50);
    BEGIN
        SELECT I.DESC_INSTITUCION
            INTO V_INST_EDUC_EXTRAN
        FROM INSTITUCION I
        JOIN SUBESPECIALIDAD SUB
            ON (SUB.ID_INSTITUCION = I.ID_INSTITUCION)
        JOIN POSTULACION PO
            ON (PO.ID_POSTULACION = SUB.ID_POSTULACION)
        JOIN POSTULANTE P
            ON (P.ID_POSTULANTE = PO.ID_POSTULANTE)
        WHERE P.ID_POSTULANTE = P_ID_POSTULANTE;
        RETURN V_INST_EDUC_EXTRAN;
    EXCEPTION
        WHEN OTHERS THEN
            VP_MSJE_ERROR:='ERROR EN FUNCIÓN FN_INST_EDUC_EXTRANJERA';
            VP_SQLERRM := SQLERRM;
        INSERT INTO ERROR_SISTEMA VALUES(SEQ_ERROR.NEXTVAL,VP_MSJE_ERROR,VP_SQLERRM); 
    END FN_INST_EDUC_EXTRANJERA;

    --FUNCION QUE OBTIENE EL ESTADO CIVIL DEL POSTULANTE    
    FUNCTION FN_EST_CIVIL (P_ID_POSTULANTE IN NUMBER)
    RETURN VARCHAR2
    AS
        V_EST_CIVIL VARCHAR2 (50);
    BEGIN
        SELECT E.DESC_EST_CIVIL
            INTO V_EST_CIVIL
        FROM ESTADO_CIVIL E
        JOIN POSTULANTE P
            ON (E.ID_EST_CIVIL = P.ID_EST_CIVIL)
        WHERE P.ID_POSTULANTE = P_ID_POSTULANTE;
        RETURN V_EST_CIVIL;
    EXCEPTION
        WHEN OTHERS THEN
            VP_MSJE_ERROR:='ERROR EN FUNCIÓN FN_EST_CIVIL';
            VP_SQLERRM := SQLERRM;
        INSERT INTO ERROR_SISTEMA VALUES(SEQ_ERROR.NEXTVAL,VP_MSJE_ERROR,VP_SQLERRM); 
    END FN_EST_CIVIL;

    --FUNCION QUE OBTIENE EL PUEBLO ORIGINARIO DEL POSTULANTE
    FUNCTION FN_PUEBLO_IND_ORIG (P_ID_POSTULANTE IN NUMBER)
    RETURN VARCHAR2
    AS
        V_PUEBLO_ORI VARCHAR2 (50);
    BEGIN
        EXECUTE IMMEDIATE 'SELECT NVL(PO.DESC_PUE_ORI, ''Ninguno'')
                          FROM PUEBLO_ORIGINARIO PO
                          RIGHT JOIN POSTULANTE P
                          ON (P.ID_PUE_ORI = PO.ID_PUE_ORI)
                          WHERE P.ID_POSTULANTE = :B_ID_POSTULANTE'
                          INTO V_PUEBLO_ORI USING P_ID_POSTULANTE;
        RETURN V_PUEBLO_ORI;
    EXCEPTION
        WHEN OTHERS THEN
            VP_MSJE_ERROR:='ERROR EN FUNCIÓN FN_PUEBLO_IND_ORIG';
            VP_SQLERRM := SQLERRM;
        INSERT INTO ERROR_SISTEMA VALUES(SEQ_ERROR.NEXTVAL,VP_MSJE_ERROR,VP_SQLERRM); 
    END FN_PUEBLO_IND_ORIG;

    --FUNCIÓN PARA RECUPERAR LA ZONA EXTREMA DEL POSTULANTE
    FUNCTION FN_ZONA_EXTREMA (P_ID_POSTULANTE IN NUMBER)
    RETURN VARCHAR2
    AS
        V_ZONA_EXTREMA VARCHAR2 (50);
    BEGIN
        SELECT C.DESC_CIUDAD
        INTO V_ZONA_EXTREMA
        FROM CIUDAD C
        JOIN POSTULANTE P ON (P.ID_CIUDAD = C.ID_CIUDAD)
        WHERE ID_POSTULANTE = P_ID_POSTULANTE;
        RETURN V_ZONA_EXTREMA;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            VP_MSJE_ERROR:='NO CORRESPONDE';
        RETURN VP_MSJE_ERROR; 
        WHEN OTHERS THEN
            VP_MSJE_ERROR:='ERROR EN FUNCIÓN FN_ZONA_EXTREMA';
            VP_SQLERRM := SQLERRM;
        INSERT INTO ERROR_SISTEMA VALUES(SEQ_ERROR.NEXTVAL,VP_MSJE_ERROR,VP_SQLERRM); 
    END FN_ZONA_EXTREMA;

END PGK_POSTULANTION_BECA;

/

--FUNCIÓN OBTENER PUNTAJE EDAD
CREATE OR REPLACE FUNCTION FN_PTJE_EDAD (P_EDAD IN NUMBER)
RETURN NUMBER
AS
    V_PTJE_EDAD NUMBER (3);
BEGIN
    SELECT PUNTOS
        INTO V_PTJE_EDAD
    FROM PTJE_EDAD
    WHERE P_EDAD BETWEEN EDAD_MIN AND EDAD_MAX ;
    RETURN V_PTJE_EDAD;
EXCEPTION
    WHEN OTHERS THEN
        PGK_POSTULANTION_BECA.VP_MSJE_ERROR:='ERROR EN FUNCIÓN FN_PTJE_EDAD';
        PGK_POSTULANTION_BECA.VP_SQLERRM := SQLERRM;
    INSERT INTO ERROR_SISTEMA VALUES(SEQ_ERROR.NEXTVAL,PGK_POSTULANTION_BECA.VP_MSJE_ERROR,PGK_POSTULANTION_BECA.VP_SQLERRM); 
END FN_PTJE_EDAD;

/

--FUNCION PARA OBTENER PTJE EXP LABORAL
CREATE OR REPLACE FUNCTION FN_PTJE_TRAYEC_EXP_LABORAL (P_ANNO_EXP IN NUMBER)
RETURN NUMBER
AS
    V_PTJE_TRAYEC NUMBER (3);
BEGIN
    SELECT PUNTOS
        INTO V_PTJE_TRAYEC
    FROM PTJE_EXP_LABORAL
    WHERE P_ANNO_EXP BETWEEN ANOS_MIN AND ANOS_MAX ;
    RETURN V_PTJE_TRAYEC;
EXCEPTION
    WHEN OTHERS THEN
        PGK_POSTULANTION_BECA.VP_MSJE_ERROR:='ERROR EN FUNCIÓN FN_PTJE_TRAYEC_EXP_LABORAL';
        PGK_POSTULANTION_BECA.VP_SQLERRM := SQLERRM;
    INSERT INTO ERROR_SISTEMA VALUES(SEQ_ERROR.NEXTVAL,PGK_POSTULANTION_BECA.VP_MSJE_ERROR,PGK_POSTULANTION_BECA.VP_SQLERRM); 
END FN_PTJE_TRAYEC_EXP_LABORAL;

/

--FUNCION PARA OBTENER EL PUNTAJE RANKING INST. EXTRANJERA
CREATE OR REPLACE FUNCTION FN_PTJE_RANKING_INST_EDUC_EXTRANJERA (P_RANKING IN NUMBER)
RETURN NUMBER
AS
    V_PTJE_RANKING NUMBER (1);
BEGIN
    EXECUTE IMMEDIATE 'SELECT PUNTOS
    FROM PTJE_RANKING
    WHERE :B_RANKING BETWEEN POSICION_MIN AND POSICION_MAX'
    INTO V_PTJE_RANKING USING P_RANKING;
    RETURN V_PTJE_RANKING;

EXCEPTION
    WHEN OTHERS THEN
        PGK_POSTULANTION_BECA.VP_MSJE_ERROR:='ERROR EN FUNCIÓN FN_PTJE_RANKING_INST_EDUC_EXTRANJERA';
        PGK_POSTULANTION_BECA.VP_SQLERRM := SQLERRM;
    INSERT INTO ERROR_SISTEMA VALUES(SEQ_ERROR.NEXTVAL,PGK_POSTULANTION_BECA.VP_MSJE_ERROR,PGK_POSTULANTION_BECA.VP_SQLERRM);
    RETURN 0;
END FN_PTJE_RANKING_INST_EDUC_EXTRANJERA;

/

--TRIGGER PARA EL CALCULOS Y ACTUALIZAR COLUMNA PUNTAJE TOTAL
CREATE OR REPLACE TRIGGER TRG_PTJE_TOTAL
BEFORE INSERT ON RESUMEN_PROCESO_POSTULANTE
FOR EACH ROW

BEGIN
    :NEW.PTJE_TOTAL := :NEW.PTJE_EDAD * 0.05 + :NEW.PTJE_EST_CIVIL * 0.05 + :NEW.PTJE_PUEBLO_IND_ORIG * 0.10 + :NEW.PTJE_ZONA_EXTRENA * 0.10
                        + :NEW.PJE_ANTEC_ACAD * 0.10 + :NEW.PTJE_TRAYEC_EXP_LABORAL * 0.10 + :NEW.PTJE_DOCENCIA_INVEST * 0.10
                        + :NEW.PTJE_OBJETIVO_ESTUDIO * 0.10 + :NEW.PTJE_INTERES * 0.5 + :NEW.PTJE_RETRIB * 0.5 + :NEW.PTJE_RANKING_INST_EDUC_EXTRANJERA * 0.20;
END TRG_PTJE_TOTAL;

/
--CREACIÓN DEL PROCEDIMIENTO PRINCIPAL
create or replace PROCEDURE SP_RESUMEN_PROCESO_POSTULANTE
IS
    R_RESUMEN_PROCESO_POSTULANTE RESUMEN_PROCESO_POSTULANTE%ROWTYPE;

CURSOR C_RESUMEN_PROCESO IS
    SELECT TO_CHAR(P.NUM_RUN, '99G999G999') || '-' || P.DV_RUN AS RUN_POSTULANTE,
        P.PRI_NOMBRE || ' ' || P.SEG_NOMBRE || ' ' || P.AP_PATERNO || ' ' || P.AP_MATERNO AS NOMBRE_POSTULANTE,
        TRUNC(MONTHS_BETWEEN(SYSDATE, P.FECHA_NACI) / 12) AS EDAD,
        PTJEC.PUNTOS AS PTJE_EST_CIVIL,
        LPAD(NVL2(P.ID_PUE_ORI, 5, 0), 16, ' ') AS PJE_PUEBLO_IND_ORIG,
        NVL(PZ.PUNTOS, 0) AS PTJE_ZONA_EXTRENA,
        AA.NOTA_TITULO AS ANTEC_ACAD,
        PAA.PUNTOS AS PJE_ANTEC_ACAD,
        TRUNC(MONTHS_BETWEEN(EL.FIN_EXP_LABORAL, EL.INICIO_EXP_LABORAL) / 12) AS TRAYEC_EXP_LABORAL,
        PO.EVALUA_DOCE_INVE AS DOCENCIA_INVEST,
        PAD.PUNTOS AS PTJE_DOCENCIA_INVEST,
        PO.EVALUA_OBJETIVO AS OBJETIVO_ESTUDIO,
        POE.PUNTOS AS PTJE_OBJETIVO_ESTUDIO,
        PO.EVALUA_INTERES AS INTERES,
        NVL(PDI.PUNTOS, 0) AS PTE_INTERESES,
        PO.EVALUA_RETRIBUCION AS RETRIBUCION,
        PR.PUNTOS AS PTJE_RETRIB,
        PTJE.PUNTOS + PTJEC.PUNTOS + LPAD(NVL2(P.ID_PUE_ORI, 5, 0), 16, ' ') + NVL(PZ.PUNTOS, 0)
        + PAA.PUNTOS + NVL(PJEL.PUNTOS, 0) + PAD.PUNTOS + POE.PUNTOS + NVL(PDI.PUNTOS, 0) + PR.PUNTOS
        + NVL(PRAN.PUNTOS, 0) AS PTJE_TOTAL,
        P.ID_POSTULANTE,
        NVL(R.DESC_REGION, 'Ninguna') AS REGION,
        NVL(INS.RANKING,  0) AS RANKING
    FROM POSTULANTE P
    JOIN PTJE_EDAD PTJE          
        ON ((TRUNC(MONTHS_BETWEEN(SYSDATE, P.FECHA_NACI) / 12) BETWEEN PTJE.EDAD_MIN AND PTJE.EDAD_MAX))
    JOIN ESTADO_CIVIL EC         
        ON (EC.ID_EST_CIVIL = P.ID_EST_CIVIL)
    JOIN PTJE_ESTADO_CIVIL PTJEC 
        ON (PTJEC.DESC_ESTADO_CIVIL = EC.DESC_EST_CIVIL)
    JOIN CIUDAD C                
        ON (C.ID_CIUDAD = P.ID_CIUDAD)
    LEFT JOIN REGION R                
        ON (R.ID_REGION = C.ID_REGION)
    LEFT JOIN PTJE_ZONA_EXTREMA PZ 
        ON (PZ.NOM_REGION = R.DESC_REGION)
    JOIN ANTECEDENTES_ACADEMICOS AA   
        ON (AA.ID_POSTULANTE = P.ID_POSTULANTE)
    JOIN PTJE_ANTEC_ACADEMICOS PAA  
        ON (AA.NOTA_TITULO BETWEEN PAA.NOTA_MIN AND PAA.NOTA_MAX)
    JOIN EXP_LABORAL EL     
        ON (EL.ID_POSTULANTE = P.ID_POSTULANTE)
    LEFT JOIN PTJE_EXP_LABORAL PJEL     
        ON (TRUNC(MONTHS_BETWEEN(EL.FIN_EXP_LABORAL, EL.INICIO_EXP_LABORAL) / 12) BETWEEN PJEL.ANOS_MIN AND PJEL.ANOS_MAX)
    JOIN POSTULACION PO 
        ON (PO.ID_POSTULANTE = P.ID_POSTULANTE)
    JOIN PTJE_ACT_DOCENCIA PAD 
        ON (PAD.NIVEL_ACT = PO.EVALUA_DOCE_INVE)
    JOIN PTJE_OBJETIVO_EST POE 
        ON (POE.EVALUACION = PO.EVALUA_OBJETIVO)
    LEFT JOIN PTJE_DECL_INTERES PDI 
        ON (PDI.EVALUACION = PO.EVALUA_INTERES)
    JOIN PTJE_RETRIBUCION PR 
        ON (PR.EVALUACION = PO.EVALUA_RETRIBUCION)
    LEFT JOIN INSTITUCION INS 
        ON (INS.ID_CIUDAD = C.ID_CIUDAD)
    LEFT JOIN PTJE_RANKING PRAN 
        ON (INS.RANKING BETWEEN PRAN.POSICION_MIN AND PRAN.POSICION_MAX)
    ORDER BY P.AP_PATERNO DESC, "PTJE_TOTAL" DESC;

BEGIN
    EXECUTE IMMEDIATE 'TRUNCATE TABLE RESUMEN_PROCESO_POSTULANTE';
    FOR R_RESUMEN_PROCESO IN C_RESUMEN_PROCESO LOOP

        R_RESUMEN_PROCESO_POSTULANTE.RUN_POSTULANTE                             := R_RESUMEN_PROCESO.RUN_POSTULANTE;
        R_RESUMEN_PROCESO_POSTULANTE.NOMBRE_POSTULANTE                          := R_RESUMEN_PROCESO.NOMBRE_POSTULANTE;
        R_RESUMEN_PROCESO_POSTULANTE.EDAD                                       := R_RESUMEN_PROCESO.EDAD;
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_EDAD                                  := FN_PTJE_EDAD(R_RESUMEN_PROCESO.EDAD);
        R_RESUMEN_PROCESO_POSTULANTE.EST_CIVIL                                  := PGK_POSTULANTION_BECA.FN_EST_CIVIL(R_RESUMEN_PROCESO.ID_POSTULANTE);
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_EST_CIVIL                             := R_RESUMEN_PROCESO.PTJE_EST_CIVIL;
        R_RESUMEN_PROCESO_POSTULANTE.PUEBLO_IND_ORIG                            := PGK_POSTULANTION_BECA.FN_PUEBLO_IND_ORIG(R_RESUMEN_PROCESO.ID_POSTULANTE); 
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_PUEBLO_IND_ORIG                       := R_RESUMEN_PROCESO.PJE_PUEBLO_IND_ORIG;
        R_RESUMEN_PROCESO_POSTULANTE.ZONA_EXTREMA                               := PGK_POSTULANTION_BECA.FN_ZONA_EXTREMA(R_RESUMEN_PROCESO.ID_POSTULANTE);
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_ZONA_EXTRENA                          := R_RESUMEN_PROCESO.PTJE_ZONA_EXTRENA;
        R_RESUMEN_PROCESO_POSTULANTE.ANTEC_ACAD                                 := R_RESUMEN_PROCESO.ANTEC_ACAD;
        R_RESUMEN_PROCESO_POSTULANTE.PJE_ANTEC_ACAD                             := R_RESUMEN_PROCESO.PJE_ANTEC_ACAD;
        R_RESUMEN_PROCESO_POSTULANTE.TRAYEC_EXP_LABORAL                         := R_RESUMEN_PROCESO.TRAYEC_EXP_LABORAL || ' años';
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_TRAYEC_EXP_LABORAL                    := FN_PTJE_TRAYEC_EXP_LABORAL(R_RESUMEN_PROCESO.TRAYEC_EXP_LABORAL);
        R_RESUMEN_PROCESO_POSTULANTE.DOCENCIA_INVEST                            := R_RESUMEN_PROCESO.DOCENCIA_INVEST;
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_DOCENCIA_INVEST                       := R_RESUMEN_PROCESO.PTJE_DOCENCIA_INVEST;
        R_RESUMEN_PROCESO_POSTULANTE.OBJETIVO_ESTUDIO                           := R_RESUMEN_PROCESO.OBJETIVO_ESTUDIO;
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_OBJETIVO_ESTUDIO                      := R_RESUMEN_PROCESO.PTJE_OBJETIVO_ESTUDIO;
        R_RESUMEN_PROCESO_POSTULANTE.INTERES                                    := R_RESUMEN_PROCESO.INTERES;
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_INTERES                               := R_RESUMEN_PROCESO.PTE_INTERESES;
        R_RESUMEN_PROCESO_POSTULANTE.RETRIBUCION                                := R_RESUMEN_PROCESO.RETRIBUCION;
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_RETRIB                                := R_RESUMEN_PROCESO.PTJE_RETRIB;
        R_RESUMEN_PROCESO_POSTULANTE.INST_EDUC_EXTRANJERA                       := PGK_POSTULANTION_BECA.FN_INST_EDUC_EXTRANJERA (R_RESUMEN_PROCESO.ID_POSTULANTE);
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_RANKING_INST_EDUC_EXTRANJERA          := FN_PTJE_RANKING_INST_EDUC_EXTRANJERA (R_RESUMEN_PROCESO.RANKING);
        R_RESUMEN_PROCESO_POSTULANTE.PTJE_TOTAL                                 := 0;

        INSERT INTO RESUMEN_PROCESO_POSTULANTE VALUES R_RESUMEN_PROCESO_POSTULANTE;

    END LOOP;
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
        PGK_POSTULANTION_BECA.VP_MSJE_ERROR:='ERROR EN PROCEDIMIENTO SP_RESUMEN_PROCESO_POSTULANTE';
        PGK_POSTULANTION_BECA.VP_SQLERRM:=SQLERRM;
    INSERT INTO ERROR_SISTEMA VALUES(SEQ_ERROR.NEXTVAL,PGK_POSTULANTION_BECA.VP_MSJE_ERROR,PGK_POSTULANTION_BECA.VP_SQLERRM); 
END SP_RESUMEN_PROCESO_POSTULANTE;

/

EXEC SP_RESUMEN_PROCESO_POSTULANTE;

/

SELECT * FROM RESUMEN_PROCESO_POSTULANTE;



